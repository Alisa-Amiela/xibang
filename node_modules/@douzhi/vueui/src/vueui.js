let routes = [];
let router;
let dzApp;
let Pages = {};
let modules = {};
function loadScript(url, callback) {
  let script = document.createElement("script");
  script.src = url;
  document.head.appendChild(script);
  script.onload = function() {
    callback();
  };
}
function Page(options) {
  return options;
}

function define(id, callback) {
  modules[id] = callback();
}

function require(id) {
  return modules[id];
}

layui.use(["jquery", "layer"], function() {
  let $ = layui.$;
  let layer = layui.layer;
  $("dz-menu").each(function() {
    let page = $(this).attr("to");
    if (!page) return;
    routes.push({
      path: page,
      component: resolve => {
        function getHtml() {
          return axios.get(page.substr(1) + ".html");
        }
        function getScript() {
          return axios.get(page.substr(1) + ".js");
        }
        axios.all([getHtml(), getScript()]).then(
          axios.spread((html, js) => {
            let options = {};
            if (js && js.data) {
              let script = document.createElement("script");
              script.innerHTML =
                "define('" +
                page.substr(1) +
                "', function(){ return " +
                js.data +
                "})";
              document.head.appendChild(script);
              options = require(page.substr(1));
              let data = JSON.parse(JSON.stringify(options["data"]));
              options["data"] = function() {
                return data;
              };
            }
            if (!html.data) {
              layer.msg(page + ".html is empty.");
              return false;
            }
            options["template"] = html.data;
            resolve(options);
          })
        );
      }
    });
  });
  router = new VueRouter({
    routes
  });
  Vue.prototype.layer = {
    msg(message) {
      layui.use("layer", () => {
        layer.msg(message);
      });
    },
    confirm(content, options, yes, cancel) {
      layui.use("layer", () => {
        layer.confirm(content, options, yes, cancel);
      });
    }
  };
  dzApp = new Vue({
    data: {
      isHideSide: false
    },
    mounted() {
      this.$el.style.animationName = "show";
    },
    router
  }).$mount("#dz-app");
});
